variables:
  CONTAINER_IMAGE_BASE: registry.gitlab.com/$CI_PROJECT_PATH
  DOCKER_HOST: tcp://docker:2375

stages:
  - build
  - deploy_stage
  - deploy_prod

build_go:
  image: docker:stable
  services:
    - docker:dind
  stage: build
  script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $CONTAINER_IMAGE_BASE/http:latest || true
    - docker build --cache-from $CONTAINER_IMAGE_BASE/http:latest --tag $CONTAINER_IMAGE_BASE/http:$CI_COMMIT_SHA --tag $CONTAINER_IMAGE_BASE/http:latest --target admin-http  .
    - docker build --cache-from $CONTAINER_IMAGE_BASE/jobs:latest --tag $CONTAINER_IMAGE_BASE/jobs:$CI_COMMIT_SHA --tag $CONTAINER_IMAGE_BASE/jobs:latest --target admin-jobs  .
    - docker push $CONTAINER_IMAGE_BASE/http:$CI_COMMIT_SHA
    - docker push $CONTAINER_IMAGE_BASE/http:latest
    - docker push $CONTAINER_IMAGE_BASE/jobs:$CI_COMMIT_SHA
    - docker push $CONTAINER_IMAGE_BASE/jobs:latest

deploy_stage_job:
  image: ubuntu
  stage: deploy_stage
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh -o StrictHostKeyChecking=no root@$SERVER_HOST sudo docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - ssh -o StrictHostKeyChecking=no root@$SERVER_HOST sudo docker stop stage.cms.le3.io-http
    - ssh -o StrictHostKeyChecking=no root@$SERVER_HOST sudo docker rm stage.cms.le3.io-http
    - ssh -o StrictHostKeyChecking=no root@$SERVER_HOST sudo docker run --name stage.cms.le3.io-http -e 'LETSENCRYPT_HOST=stage.cms.le3.io' -e 'VIRTUAL_HOST=stage.cms.le3.io' -e 'PORT=80' $CONTAINER_IMAGE_BASE/http:$CI_COMMIT_SHA
    - ssh -o StrictHostKeyChecking=no root@$SERVER_HOST sudo docker stop stage.cms.le3.io-jobs
    - ssh -o StrictHostKeyChecking=no root@$SERVER_HOST sudo docker rm stage.cms.le3.io-jobs
    - ssh -o StrictHostKeyChecking=no root@$SERVER_HOST sudo docker run --name stage.cms.le3.io-jobs $CONTAINER_IMAGE_BASE/jobs:$CI_COMMIT_SHA

deploy_prod_job:
  image: ubuntu
  stage: deploy_prod
  script:
    - ssh root@$SERVER_HOST sudo docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - ssh root@$SERVER_HOST sudo docker stop
  when: manual